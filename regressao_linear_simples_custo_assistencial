import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression

# Importando a base de dados
custo_assis = pd.read_csv('C:/Users/danny/Downloads/TCC - MBA Puc Minas/Base de dados/Manual/base_de_dados.csv', sep=";")

# Convertendo coluna custo para numérica
custo_assis['custo'] = custo_assis['custo'].str.replace(',', '.').astype(float)

# Convertendo coluna Tempo para tipo datetime
custo_assis['Tempo'] = pd.to_datetime(custo_assis['Tempo'], format='%d/%m/%Y')

# Indexando a coluna Tempo
custo_assis = custo_assis.set_index('Tempo')

# Divisão em treino e teste
treino = custo_assis.loc['2015-01-01':'2019-10-01']
teste = custo_assis.loc['2020-01-01':'2023-07-01']

# Preparando os dados de treino
X_treino = np.arange(len(treino)).reshape(-1, 1)
y_treino = treino['custo'].values

# Criando e treinando o modelo de regressão linear
modelo = LinearRegression()
modelo.fit(X_treino, y_treino)

# Preparando os dados de teste
X_teste = np.arange(len(treino), len(treino) + len(teste)).reshape(-1, 1)

# Fazendo previsões para o período de teste
previsoes_teste = modelo.predict(X_teste)

# Preparando os dados para fazer previsões futuras
X_futuro = np.arange(len(custo_assis), len(custo_assis) + 5 * 1).reshape(-1, 1)  # 5 trimestres

# Fazendo previsões para o futuro
previsoes_futuro = modelo.predict(X_futuro)

# Criando índice de datas para as novas previsões (trimestrais)
datas_futuras = pd.date_range(start='2023-10-01', periods=5, freq='3M')  # 5 trimestres

# Criando DataFrame para as novas previsões
previsoes_df = pd.DataFrame(previsoes_futuro, index=datas_futuras, columns=['Previsão de custo assistencial'])

# Imprimindo as previsões e o índice de datas correspondente
print("Previsões trimestrais para o período de 2023-10-01 até 2024-10-01:")
print(previsoes_df)

# Plotando os resultados
plt.figure(figsize=(10, 6))
plt.plot(treino.index, y_treino, label='Treino')
plt.plot(teste.index, teste['custo'], label='Teste')
plt.plot(teste.index, previsoes_teste, label='Previsão Teste')
plt.plot(previsoes_df.index, previsoes_df, label='Previsão Futuro')
plt.xlabel('Data')
plt.ylabel('Custo de Assistência')
plt.title('Previsões X Real')
plt.legend()
plt.show()
